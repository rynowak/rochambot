@inject MatchMakerClient MatchMakerClient
@inject GameService Game
@inject NavigationManager Navigation
@implements IDisposable

<p>Waiting for opponent</p>
<p>Hold on a minute @user?.Username ...</p>

@functions {
    UserInfo user;
    CancellationTokenSource cts = new CancellationTokenSource();

    [CascadingParameter] Task<AuthenticationState> AuthenticationState { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        Console.WriteLine("PARAMS");
        var state = await AuthenticationState;
        if (state?.User != null)
        {
            Console.WriteLine("PARAMS");
            user = new UserInfo() { Username = state.User?.FindFirst(ClaimTypes.Name)?.Value, };
            var game = await MatchMakerClient.JoinGameAsync(user, cts.Token);
            Game.CurrentGame = game;
            Navigation.NavigateTo("/play");
        }
    }

    void IDisposable.Dispose()
    {
        cts?.Cancel();
    }
}
@inject UserService User
@inject GameService Game
@implements IDisposable

<CascadingValue Value="@User.CurrentUser">
  <CascadingValue Value="@Game.CurrentGame">
    <Router AppAssembly="@typeof(Startup).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="@routeData" DefaultLayout="typeof(MainLayout)" />
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
  </CascadingValue>
</CascadingValue>

@functions {
    protected override void OnInitialized()
    {
        User.UserChanged += OnUserChanged;
        Game.GameChanged += OnGameChanged;
    }

    void IDisposable.Dispose()
    {
        Game.GameChanged -= OnGameChanged;
        User.UserChanged -= OnUserChanged;
    }

    private void OnUserChanged(object sender, UserInfo e)
    {
        StateHasChanged();
    }

    private void OnGameChanged(object sender, GameInfo e)
    {
        StateHasChanged();
    }
}